{"version":3,"file":"main.js","mappings":"kCAqBA,MAAMA,EAAOC,SAASC,cAAc,QAEpCF,EAAKG,mBAAmB,aAAe,uCAIvC,MAAMC,EA3BN,WACE,IAAIC,EAASC,OAAO,uBAOpB,OALID,EAAS,IACXE,MAAM,kDACNF,EAASC,OAAO,wBAGXD,CACT,CAkBkBG,GACZC,EAAYT,EAAKE,cAAc,cAErC,IAAK,IAAIQ,EAAI,EAAGA,EAAIN,EAAYA,EAAWM,IACzCD,EAAUN,mBAAmB,aAAe,sCAK9C,MAAMQ,EAAQF,EAAUG,iBAAiB,SAGzCH,EAAUI,MAAMC,OAASH,EAAM,GAAGI,YAAc,IAAMX,EAAY,KAElEY,aAAY,KACVL,EAAMM,SAAQC,GAAQA,EAAKC,UAAUC,OAAO,oBAE5CT,EAjCF,SAAyBU,EAAKC,GAC5B,IAAIC,EAgCkB,EAhCLC,KAAKC,UAAYH,EAgCZ,GA/BtB,OAAOE,KAAKE,MAAMH,EACpB,CA8BQI,CAAgB,EAAGhB,EAAMiB,SAAST,UAAUU,IAAI,iBAAiB,GACtE,I,GC5CCC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CCrBAJ,EAAoBO,EAAI,SAASF,GAChC,IAAIG,EAASH,GAAUA,EAAOI,WAC7B,WAAa,OAAOJ,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoBU,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,ECNAR,EAAoBU,EAAI,SAASN,EAASQ,GACzC,IAAI,IAAIC,KAAOD,EACXZ,EAAoBc,EAAEF,EAAYC,KAASb,EAAoBc,EAAEV,EAASS,IAC5EE,OAAOC,eAAeZ,EAASS,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAb,EAAoBc,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,E","sources":["webpack://dom-lection-ahj/./src/js/app.js","webpack://dom-lection-ahj/webpack/bootstrap","webpack://dom-lection-ahj/webpack/runtime/compat get default export","webpack://dom-lection-ahj/webpack/runtime/define property getters","webpack://dom-lection-ahj/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["function promptBoardSize(){\n  let result = prompt('Введите размер поля')\n\n  if (result < 4){\n    alert('Поле слишком маленькое, введите новое значение');\n    result = prompt('Введите размер поля');\n  }\n\n  return result;\n}\n\nfunction getRandomNumber(min, max){\n  let rand = min + Math.random() * (max - min);\n  return Math.floor(rand);\n}\n\n\n\n\n\n\nconst body = document.querySelector('body');\n\nbody.insertAdjacentHTML('afterbegin', `\n  <div class=\"gameBoard\"></div>\n`);\n\nconst boardSize = promptBoardSize();\nconst gameBoard = body.querySelector('.gameBoard');\n\nfor (let i = 0; i < boardSize * boardSize; i++){\n  gameBoard.insertAdjacentHTML(\"afterbegin\", `\n    <div class=\"cell\"></div>\n  `)\n}\n\nconst cells = gameBoard.querySelectorAll('.cell');\n\n\ngameBoard.style.width = (cells[0].offsetWidth + 20) * boardSize + 'px';\n\nsetInterval(() => {\n  cells.forEach(item => item.classList.remove('cellWithGoblin'));\n\n  cells[getRandomNumber(0, cells.length)].classList.add('cellWithGoblin');\n}, 1000);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["body","document","querySelector","insertAdjacentHTML","boardSize","result","prompt","alert","promptBoardSize","gameBoard","i","cells","querySelectorAll","style","width","offsetWidth","setInterval","forEach","item","classList","remove","min","max","rand","Math","random","floor","getRandomNumber","length","add","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}